---
- name: 'Install pip requirements in a virtualenv'
  pip:
    requirements: "{{ pdnsadmin_version_path }}/requirements.txt"
    virtualenv: "{{ pdnsadmin_venv_path }}"
  become: true

- name: 'Add flask exec script'
  template:
    backup: true
    dest: "{{ pdnsadmin_venv_path }}/flask_exec"
    group: "{{ pdnsadmin_group }}"
    mode: '770'
    owner: "{{ pdnsadmin_user }}"
    src: "{{ role_path }}/templates/flask_exec.j2"
  become: true

- name: 'Generate asset files (1)'
  shell: "{{ pdnsadmin_venv_path }}/flask_exec yarn install --pure-lockfile && touch {{ pdnsadmin_version_path }}/assets_generated_1"
  args:
    creates: "{{ pdnsadmin_version_path }}/assets_generated_1"
  become: true

- name: 'Generate asset files (2)'
  shell: "{{ pdnsadmin_venv_path }}/flask_exec flask assets build && touch {{ pdnsadmin_version_path }}/assets_generated_2"
  args:
    creates: "{{ pdnsadmin_version_path }}/assets_generated_2"
  become: true

- name: 'Add systemd service'
  template:
    backup: true
    dest: "{{ pdnsadmin_service_path }}/{{ pdnsadmin_service_name }}"
    group: 'root'
    owner: 'root'
    src: "{{ role_path }}/templates/systemd/{{ pdnsadmin_service_name }}.j2"
  notify:
    - 'reload systemd'
    - 'restart powerdns_admin.service'
  become: true

- name: 'Add systemd socket'
  template:
    backup: true
    dest: "{{ pdnsadmin_service_path }}/powerdns_admin.socket"
    group: 'root'
    owner: 'root'
    src: "{{ role_path }}/templates/systemd/powerdns_admin.socket.j2"
  notify: 'reload systemd'
  become: true

- name: 'Add systemd tmpfile for powerdns'
  template:
    backup: true
    dest: "/etc/tmpfiles.d/powerdns_admin.conf"
    group: 'root'
    owner: 'root'
    src: "{{ role_path }}/templates/systemd/powerdns_admin.conf.j2"
  notify: 'reload systemd'
  become: true

- name: 'Add nginx config'
  template:
    backup: true
    dest: "/etc/nginx/sites-enabled/{{ pdnsadmin_name }}.conf"
    group: 'root'
    owner: 'root'
    src: "{{ role_path }}/templates/nginx/{{ pdnsadmin_name }}.conf.j2"
  notify: 'restart nginx'
  become: true
